function capitalizeFirstLetter(word) {
	return word.charAt(0).toUpperCase() + word.slice(1);
}

function generateRandomPokemonNumber(
	currentGenerations,
	chosenTeam = [],
	currentTeam = []
) {
	const pokemonNumberLimits = [151, 251, 386, 493, 649, 721, 809, 898, 1025];
	let randomNum = 0;
	let tries = 0;
	let numberIsValid = false;
	//(!currentGenerations || !chosenTeam || !currentTeam)
	if (!currentGenerations) {
		randomNum =
			Math.floor(
				Math.random() * pokemonNumberLimits[pokemonNumberLimits.length - 1]
			) + 1;
		return randomNum;
	}

	do {
		randomNum =
			Math.floor(
				Math.random() * pokemonNumberLimits[pokemonNumberLimits.length - 1]
			) + 1;

		tries++;

		numberIsValid = pokemonNumberLimits.some((element, index) => {
			if (randomNum > element) {
				return false;
			} else if (
				currentGenerations[index] === true &&
				(randomNum > pokemonNumberLimits[index - 1] || index === 0)
			) {
				return true;
			} else {
				return false;
			}
		});

		if (numberIsValid) {
			numberIsValid = !chosenTeam.some((element) => element.id === randomNum);
		}

		if (numberIsValid) {
			numberIsValid = !currentTeam.includes(randomNum);
		}
	} while (!numberIsValid && tries < 75);

	if (!numberIsValid) {
		return 1;
	}

	return randomNum;
}

function generateRandomStrongPokemonNumber() {
	//DE MOMENTO INCLUYE TODAS LAS GENERACIONES
	const validPokemonArray = [
		2, 3, 5, 6, 8, 9, 12, 15, 17, 18, 20, 22, 24, 25, 26, 28, 30, 31, 33, 34,
		36, 38, 40, 42, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 62, 64, 65, 67, 68,
		70, 71, 73, 75, 76, 78, 80, 82, 85, 87, 89, 91, 93, 94, 95, 97, 99, 101,
		103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123,
		124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 141, 142, 143,
		144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 162, 164,
		166, 168, 169, 171, 176, 178, 180, 181, 182, 184, 185, 186, 188, 189, 192,
		195, 196, 197, 198, 199, 200, 202, 203, 205, 207, 208, 210, 212, 213, 214,
		215, 217, 219, 221, 222, 224, 226, 227, 229, 230, 232, 233, 234, 237, 241,
		242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260,
		262, 264, 267, 269, 271, 272, 274, 275, 277, 279, 282, 284, 286, 288, 289,
		291, 292, 294, 295, 297, 299, 301, 302, 303, 306, 307, 308, 310, 313, 314,
		315, 317, 319, 321, 323, 324, 326, 329, 330, 332, 334, 335, 336, 337, 338,
		340, 342, 344, 346, 348, 350, 351, 352, 354, 356, 357, 359, 362, 365, 367,
		368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
		385, 386, 388, 389, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 407,
		409, 411, 416, 417, 419, 423, 424, 426, 428, 429, 430, 432, 435, 437, 443,
		444, 445, 448, 450, 452, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466,
		467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
		482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 499,
		500, 502, 503, 505, 508, 510, 512, 514, 516, 518, 521, 523, 526, 528, 530,
		531, 533, 534, 536, 537, 538, 539, 542, 544, 545, 547, 549, 552, 553, 555,
		556, 558, 560, 561, 562, 563, 565, 567, 569, 571, 573, 575, 576, 579, 581,
		583, 584, 586, 587, 589, 591, 593, 594, 596, 598, 601, 604, 606, 608, 609,
		611, 612, 614, 615, 617, 620, 621, 623, 625, 626, 628, 630, 631, 632, 634,
		635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651,
		652, 653, 655, 657, 658, 660, 662, 663, 666, 668, 671, 673, 675, 676, 678,
		681, 687, 689, 691, 693, 695, 697, 699, 700, 701, 705, 706, 707, 709, 711,
		713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 733,
		735, 738, 740, 743, 745, 748, 750, 752, 754, 756, 758, 760, 763, 765, 766,
		768, 770, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
		786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
		802, 803, 804, 805, 806, 807, 809, 811, 812, 814, 815, 817, 818, 820, 822,
		823, 826, 828, 830, 832, 834, 836, 838, 839, 841, 842, 844, 845, 847, 849,
		851, 853, 855, 858, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 873,
		874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890,
		891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
		907, 908, 910, 911, 913, 914, 916, 918, 920, 922, 923, 925, 927, 929, 930,
		931, 933, 934, 936, 937, 939, 941, 943, 945, 947, 949, 952, 954, 956, 958,
		959, 961, 962, 964, 966, 967, 968, 970, 972, 973, 975, 976, 977, 979, 980,
		981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
		997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
		1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
		1024, 1025,
	];

	const randomIndex = Math.floor(Math.random() * validPokemonArray.length);
	return validPokemonArray[randomIndex];
}

export {
	generateRandomPokemonNumber,
	generateRandomStrongPokemonNumber,
	capitalizeFirstLetter,
};
